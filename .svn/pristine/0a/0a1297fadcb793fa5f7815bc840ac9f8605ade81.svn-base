import Vue from 'vue'
import Router from 'vue-router'
/* Layout */
import Layout from '../views/layout/Layout'

// in development-env not use lazy-loading, because lazy-loading too many pages will cause webpack hot update too slow. so only in production use lazy-loading;
// detail: https://panjiachen.github.io/vue-element-admin-site/#/lazy-loading

Vue.use(Router)


/**
 * hidden: true                   if `hidden:true` will not show in the sidebar(default is false)
 * alwaysShow: true               if set true, will always show the root menu, whatever its child routes length
 *                                if not set alwaysShow, only more than one route under the children
 *                                it will becomes nested mode, otherwise not show the root menu
 * redirect: noredirect           if `redirect:noredirect` will no redirct in the breadcrumb
 * name:'router-name'             the name is used by <keep-alive> (must set!!!)
 * meta : {
    title: 'title'               the name show in submenu and breadcrumb (recommend set)
    icon: 'svg-name'             the icon show in the sidebar,
  }
 **/
export const constantRouterMap = [
  {path: '/login', component: () => import('@/views/login/index'), hidden: true},
  {path: '/404', component: () => import('@/views/404'), hidden: true},
  {path: '/preview', component: () => import('@/views/preview'), hidden: true},
  {
    path: '/',
    component: Layout,
    redirect: '/dashboard',
    name: 'Dashboard',
    hidden: true,
    children: [{
      path: 'dashboard',
      component: () => import('@/views/dashboard/index')
    }]
  }
]

export const asyncRouterMap = [
  {
    path: '/user',
    component: Layout,
    meta: {
      roles: ['superAdmin', 'operator']
    },
    children: [{
      path: 'index',
      name: 'User',
      component: () =>
        import ('@/views/user/index'),
      meta: {
        title: '用户管理',
        icon: 'user',
      }
    }]
  },
  {
    path: '/order',
    component: Layout,
    meta: {
      roles: ['superAdmin', 'financial']
    },
    children: [{
      path: 'index',
      name: 'Order',
      component: () =>
        import ('@/views/order/index'),
      meta: {
        title: '订单管理',
        icon: 'finance',
      }
    }]
  },
  {
    path: '/apply',
    component: Layout,
    meta: {
      roles: ['superAdmin', 'operator']
    },
    children: [{
      path: 'index',
      name: 'Apply',
      component: () =>
        import ('@/views/apply/index'),
      meta: {
        title: '申请管理',
        icon: 'table',
      }
    }]
  },
  {
    path: '/course',
    component: Layout,
    meta: {
      roles: ['superAdmin', 'operator']
    },
    children: [{
      path: 'index',
      name: 'Course',
      component: () =>
        import ('@/views/course/index'),
      meta: {
        title: '课程管理',
        icon: 'table',
      }
    }]
  },
  {
    path: '/article',
    component: Layout,
    meta: {
      roles: ['superAdmin', 'operator']
    },
    children: [{
      path: 'index',
      name: 'Article',
      component: () =>
        import ('@/views/article/index'),
      meta: {
        title: '资讯管理',
        icon: 'table',
      }
    }]
  },
  {
    path: '/admin',
    component: Layout,
    meta: {
      roles: ['superAdmin']
    },
    children: [{
      path: 'index',
      name: 'Admin',
      component: () =>
        import ('@/views/admin/index'),
      meta: {
        title: '管理员管理',
        icon: 'admin',
      }
    }]
  },
  {
    path: '/content',
    component: Layout,
    redirect: '/content/banner',
    name: 'Content',
    meta: {
      title: '页面管理',
      icon: 'setting',
      roles: ['superAdmin', 'operator']
    },
    children: [{
      path: 'banner',
      name: 'Banner',
      component: () =>
        import ('@/views/content/banner'),
      meta: {
        title: '轮播图管理',
      }
    }, {
      path: 'expert',
      name: 'Expert',
      component: () =>
        import ('@/views/content/expert'),
      meta: {
        title: '导师展示',
      }
    },]
  },
  {
    path: '*',
    redirect: '/404',
    hidden: true
  }
];

export default new Router({
  // mode: 'history', //后端支持可开
  scrollBehavior: () => ({
    y: 0
  }),
  routes: constantRouterMap
})
