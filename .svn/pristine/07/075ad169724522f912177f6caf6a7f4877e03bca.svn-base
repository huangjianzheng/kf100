package com.medhead.kf100.web.admin;


import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.plugins.Page;
import com.medhead.kf100.common.dto.PageEntity;
import com.medhead.kf100.common.dto.ResponseResult;
import com.medhead.kf100.common.util.CommonUtil;
import com.medhead.kf100.common.util.contant.CommonConstants;
import com.medhead.kf100.exception.BusinessException;
import com.medhead.kf100.model.ApplicationFormResult;
import com.medhead.kf100.model.dto.AdminApplicationFormResultSearchDto;
import com.medhead.kf100.service.ApplicationFormResultService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import springfox.documentation.annotations.ApiIgnore;

import java.util.Date;

/**
 * <p>
 * 前端控制器
 * </p>
 *
 * @author ming
 * @since 2018-11-26
 */
@RestController
@RequestMapping("api/admin/apply")
@ApiIgnore
public class AdminApplyController {

    @Autowired
    private ApplicationFormResultService applicationFormResultService;


    @PostMapping("list")
    public ResponseResult<PageEntity<ApplicationFormResult>> getArticleList(AdminApplicationFormResultSearchDto dto) {
        if(dto == null) {
            throw new BusinessException(CommonConstants.RESPONSE_BAD_REQUEST_CODE, "参数错误");
        }
        Page<ApplicationFormResult> page = new Page<>();
        page.setCurrent(dto.getCurrent());
        page.setSize(dto.getPageSize());
        EntityWrapper<ApplicationFormResult> ew = new EntityWrapper<>();
        ew.where("1 = 1");
        if(dto.getType() != null) {
            ew.eq("afr.type", dto.getType());
        }
        if(dto.getStatus() != null) {
            if(dto.getStatus().equals(3)) {
                ew.eq("afr.status", 0);
                ew.lt("afr.expire_time", new Date());
            } else {
                ew.eq("afr.status", dto.getStatus());
            }
        }
        if(dto.getUserName() != null) {
            ew.like("su.user_name", dto.getUserName());
        }
        if(dto.getStart() != null) {
            ew.ge("afr.create_time", new Date(dto.getStart()));
        }
        if(dto.getEnd() != null) {
            ew.le("afr.create_time", new Date(dto.getEnd()));
        }
        ew.orderBy("afr.id", false);
        return ResponseResult.success(CommonUtil.pageToPageEntity(applicationFormResultService.selectApplicationFormResultPage(page, ew)));
    }

    @PostMapping("updateStatus")
    public ResponseResult updateStatus(Long id,Integer status) {
        if(id == null || status == null){
            throw new BusinessException(CommonConstants.RESPONSE_BAD_REQUEST_CODE,"数据不能为空");
        }
        if(status!=1&&status!=2){
            throw new BusinessException(CommonConstants.RESPONSE_BAD_REQUEST_CODE,"状态异常");
        }
        EntityWrapper<ApplicationFormResult> ew = new EntityWrapper<>();
        ApplicationFormResult result = new ApplicationFormResult();
        result.setStatus(status);
        ew.eq("id",id);
        ew.eq("status",0);
        ew.ge("expire_time",new Date());
        boolean flag = applicationFormResultService.update(result, ew);
        if(flag){
            return ResponseResult.success();
        }
        return ResponseResult.badRequest("该申请已过期或已被处理");
    }

}

