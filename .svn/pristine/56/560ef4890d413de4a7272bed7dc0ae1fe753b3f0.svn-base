package com.medhead.kf100.web.admin;


import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.plugins.Page;
import com.medhead.kf100.common.dto.PageEntity;
import com.medhead.kf100.common.dto.ResponseResult;
import com.medhead.kf100.common.util.CommonUtil;
import com.medhead.kf100.common.util.contant.CommonConstants;
import com.medhead.kf100.exception.BusinessException;
import com.medhead.kf100.model.Article;
import com.medhead.kf100.model.Banner;
import com.medhead.kf100.service.BannerService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import springfox.documentation.annotations.ApiIgnore;

/**
 * <p>
 * 前端控制器
 * </p>
 *
 * @author ming
 * @since 2018-11-26
 */
@RestController
@RequestMapping("api/admin/banner")
@ApiIgnore
public class AdminBannerController {

    @Autowired
    private BannerService bannerService;

    @PostMapping("list")
    public ResponseResult<PageEntity<Banner>> getBannerList(Integer type, @RequestParam(defaultValue = "0") Integer current, @RequestParam(defaultValue = "10") Integer pageSize) {
        Banner banner = new Banner();
        banner.setType(type);
        EntityWrapper<Banner> ew = new EntityWrapper<>(banner);
        ew.orderBy("id",false);
        return ResponseResult.success(CommonUtil.pageToPageEntity(bannerService.selectPage(new Page<>(current, pageSize),ew)));
    }

    @PostMapping("delete")
    public ResponseResult deleteBanner(Long id) {
        bannerService.deleteById(id);
        return ResponseResult.success();
    }

    @PostMapping("new")
    public ResponseResult newBanner(Banner banner) {
        if(banner == null){
            throw new BusinessException(CommonConstants.RESPONSE_BAD_REQUEST_CODE,"数据为空");
        }
        bannerService.insert(banner);
        return ResponseResult.success();
    }

    @PostMapping("update")
    public ResponseResult updateBanner(Banner banner) {
        if(banner == null){
            throw new BusinessException(CommonConstants.RESPONSE_BAD_REQUEST_CODE,"数据为空");
        }
        bannerService.updateById(banner);
        return ResponseResult.success();
    }

    @PostMapping("updateStatus")
    public ResponseResult updateStatus(Long id, Integer status) {
        if(id == null){
            throw new BusinessException(CommonConstants.RESPONSE_BAD_REQUEST_CODE, "文章id为空");
        }
        if(status != 0 && status != 1){
            throw new BusinessException(CommonConstants.RESPONSE_BAD_REQUEST_CODE, "文章状态异常参数");
        }
        Banner banner = new Banner();
        banner.setId(id);
        banner.setStatus(status);
        bannerService.updateById(banner);
        return ResponseResult.success();
    }
}

